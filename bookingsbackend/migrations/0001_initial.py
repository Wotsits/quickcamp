# Generated by Django 3.1.7 on 2021-07-09 08:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profilepic', models.URLField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('adultno', models.PositiveSmallIntegerField()),
                ('childno', models.PositiveSmallIntegerField()),
                ('infantno', models.PositiveSmallIntegerField()),
                ('vehicleno', models.PositiveSmallIntegerField()),
                ('petno', models.PositiveSmallIntegerField()),
                ('bookingrate', models.FloatField()),
                ('totalpayments', models.FloatField()),
                ('balance', models.FloatField()),
                ('checkedin', models.BooleanField(default=False)),
                ('eta', models.TimeField(blank=True, null=True)),
                ('locked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=255)),
                ('surname', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('baseperbooking', models.FloatField()),
                ('basepernight', models.FloatField()),
                ('adult', models.FloatField()),
                ('child', models.FloatField()),
                ('infant', models.FloatField()),
                ('pet', models.FloatField()),
                ('vehicle', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address1', models.CharField(default='Address1', max_length=20)),
                ('address2', models.CharField(default='Address2', max_length=20)),
                ('towncity', models.CharField(default='Town/City', max_length=20)),
                ('county', models.CharField(default='County', max_length=20)),
                ('postcode', models.CharField(default='AA1 1AA', max_length=20)),
                ('vatregno', models.CharField(default='GB 00000000', max_length=20)),
                ('telephone', models.CharField(default='01111 111111', max_length=20)),
                ('email', models.CharField(default='site@site.com', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PitchType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90)),
                ('description', models.TextField()),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookingsbackend.site')),
            ],
        ),
        migrations.CreateModel(
            name='Pitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('acceptsvan', models.BooleanField()),
                ('acceptstrailertent', models.BooleanField()),
                ('acceptscaravan', models.BooleanField()),
                ('acceptstent', models.BooleanField()),
                ('acceptslarge', models.BooleanField()),
                ('haselec', models.BooleanField()),
                ('takesawning', models.BooleanField()),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookingsbackend.site')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookingsbackend.pitchtype')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datestamp', models.DateField(auto_now_add=True)),
                ('payment', models.IntegerField()),
                ('comment', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationdate', models.DateField(auto_now_add=True)),
                ('lasteditdate', models.DateField(auto_now=True)),
                ('value', models.FloatField()),
                ('method', models.CharField(choices=[('Cash', 'Cash'), ('BACS', 'BACS'), ('Card', 'Card')], max_length=20)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paymentsbybooking', to='bookingsbackend.booking')),
            ],
        ),
        migrations.CreateModel(
            name='PartyVehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehiclereg', models.CharField(max_length=7)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('checkedin', models.BooleanField(default=False)),
                ('noshow', models.BooleanField(default=False)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookingvehicles', to='bookingsbackend.booking')),
            ],
        ),
        migrations.CreateModel(
            name='PartyPet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('checkedin', models.BooleanField(default=False)),
                ('noshow', models.BooleanField(default=False)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookingpets', to='bookingsbackend.booking')),
            ],
        ),
        migrations.CreateModel(
            name='PartyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('surname', models.CharField(blank=True, max_length=255, null=True)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('type', models.CharField(choices=[('Adult', 'Adult'), ('Child', 'Child'), ('Infant', 'Infant')], max_length=20)),
                ('checkedin', models.BooleanField(default=False)),
                ('noshow', models.BooleanField(default=False)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookingparty', to='bookingsbackend.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Extra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rate', models.FloatField()),
                ('rateapplication', models.CharField(choices=[('per booking', 'per booking'), ('per night', 'per night')], max_length=20)),
                ('mandatorypublic', models.BooleanField()),
                ('mandatoryall', models.BooleanField()),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookingsbackend.site')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('important', models.BooleanField()),
                ('comment', models.TextField()),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentsbybooking', to='bookingsbackend.booking')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='guest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bookingsbackend.guest'),
        ),
        migrations.AddField(
            model_name='booking',
            name='pitch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookingsbypitch', to='bookingsbackend.pitch'),
        ),
        migrations.AddField(
            model_name='user',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookingsbackend.site'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
